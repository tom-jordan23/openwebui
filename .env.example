# OpenWebUI AI Assistant Platform - Environment Configuration

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Secret key for sessions and security (generate a strong random key)
WEBUI_SECRET_KEY=your-super-secret-key-change-this-in-production
WEBUI_NAME="Personal AI Assistant"

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database settings
POSTGRES_DB=openwebui
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/openwebui

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for caching and sessions
REDIS_URL=redis://redis:6379
REDIS_PASSWORD=

# =============================================================================
# MODEL SERVING
# =============================================================================

# Ollama configuration
OLLAMA_BASE_URL=http://ollama:11434

# Default model settings
DEFAULT_MODEL=llama2-7b
MODEL_PATH=./models

# LightLLM configuration (if using)
LIGHTLLM_URL=http://lightllm:8000

# OpenAI API (optional)
OPENAI_API_KEY=

# Anthropic API (optional)
ANTHROPIC_API_KEY=

# =============================================================================
# ADMIN USER AUTO-ACTIVATION
# =============================================================================

# Automatically activate first user as admin (true/false)
AUTO_ACTIVATE_FIRST_ADMIN=true

# Specific email to activate as admin (optional)
# If not set, the first registered user will be activated
DEFAULT_ADMIN_EMAIL=

# =============================================================================
# KNOWLEDGE SYSTEMS
# =============================================================================

# Vector database (Qdrant)
QDRANT_HOST=vector-db
QDRANT_PORT=6333
VECTOR_DB_URL=http://vector-db:6333

# Graph database (Neo4j)
NEO4J_URI=bolt://graph-db:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password
GRAPH_DB_URL=bolt://graph-db:7687

# Enable GraphRAG features
ENABLE_GRAPHRAG=true

# Enable MCP (Model Context Protocol)
ENABLE_MCP=true

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Grafana admin password
GRAFANA_ADMIN_PASSWORD=admin123

# Prometheus retention
PROMETHEUS_RETENTION_TIME=30d

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8081

# Session expiration (hours)
SESSION_EXPIRE_HOURS=24

# Maximum upload size
MAX_UPLOAD_SIZE=100MB

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode (true/false)
DEBUG=true

# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=info

# Environment (development, staging, production)
ENVIRONMENT=development