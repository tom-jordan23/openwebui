{{- if .Values.graphrag.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openwebui-platform.fullname" . }}-graphrag-processor
  labels:
    {{- include "openwebui-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: graphrag-processor
spec:
  {{- if not .Values.graphrag.processor.autoscaling.enabled }}
  replicas: {{ .Values.graphrag.processor.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openwebui-platform.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: graphrag-processor
  template:
    metadata:
      labels:
        {{- include "openwebui-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: graphrag-processor
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openwebui-platform.serviceAccountName" . }}
      securityContext:
        fsGroup: 2000
      containers:
        - name: graphrag-processor
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
              - ALL
          image: "{{ .Values.graphrag.processor.image.repository }}:{{ .Values.graphrag.processor.image.tag }}"
          imagePullPolicy: {{ .Values.graphrag.processor.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: CELERY_BROKER_URL
              value: "redis://{{ .Release.Name }}-redis-master:6379/1"
            - name: CELERY_RESULT_BACKEND
              value: "redis://{{ .Release.Name }}-redis-master:6379/2"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "openwebui-platform.fullname" . }}-secrets
                  key: database-url
            - name: VECTOR_DB_URL
              value: "http://{{ .Release.Name }}-qdrant:6333"
            - name: GRAPH_DB_URL
              value: "bolt://{{ .Release.Name }}-neo4j:7687"
            - name: PYTHONPATH
              value: "/app"
          command:
            - "python"
            - "-m"
            - "src.api.knowledge_management"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.graphrag.processor.resources | nindent 12 }}
          volumeMounts:
            - name: app-src
              mountPath: /app/src
              readOnly: true
      volumes:
        - name: app-src
          configMap:
            name: {{ include "openwebui-platform.fullname" . }}-graphrag-config
      {{- with .Values.graphrag.processor.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphrag.processor.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphrag.processor.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}